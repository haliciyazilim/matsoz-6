function InteractiveGrids(e){this.id=InteractiveGrids.GetId(),this.size=e.size,this.position=e.position,this.style=e.style,this.points=[];for(var t=0;t<=8;t++)(new Path.Line(this.position.add(0,this.size*t),this.position.add(this.size*8,this.size*t))).set_style(this.style),(new Path.Line(this.position.add(this.size*t,0),this.position.add(this.size*t,this.size*8))).set_style(this.style);for(var t=0;t<=8;t++)for(var n=0;n<=8;n++){var r=this.position.add(this.size*t,this.size*n),i=new Path.Circle(r,this.size*.3);i.set_style({fillColor:new RgbColor(1,1,1,0)}),i.class="InteractiveGridCircles"+this.id}return this}InteractiveGrids.prototype.drawShape=function(e){this.path=new Path,this.path.set_style(this.style).set_style({strokeWidth:3,strokeCap:"butt",strokeColor:"#f00"});if(e){for(var t=0;t<e.length;t++){var n=e[t].multiply(this.size,this.size).add(this.position);this.points.push(n),this.path.add(n)}this.path.closed=!0}return this},InteractiveGrids.prototype.createTool=function(){var e=new Tool,t=this;return e.onMouseDown=function(e){e.item&&e.item.class=="InteractiveGridCircles"+t.id?(e.item.set_style({}),t.path.add(e.item.position),e.item.class="SelectedGridCircles",t.points.push(e.item.position),e.item.insertAbove(t.path)):e.item&&e.item.class=="SelectedGridCircles"&&t.points.length>2&&(t.path.closed=!0,this.remove())},e.activate(),this},InteractiveGrids.CreateShape=function(e){var t=[],n=new Point(1,1),r=new Point(0,0);switch(e){case 0:t.push(new Point(1,0)),t.push(new Point(0,2)),t.push(new Point(3,2)),n=new Point(Util.randomInteger(1,3),Util.randomInteger(1,3)),r=new Point(Util.randomInteger(1,3),Util.randomInteger(1,3))}for(var i=0;i<t.length;i++)t[i]=t[i].multiply(n).add(r);return t},InteractiveGrids.AreShapesSimilar=function(e,t){if(e.length!=t.length)return!1;var n=1e-5;function r(e){var t=[];for(var n=0;n<e.length;n++){var r=e[n],i=e[(n-1+e.length)%e.length],s=e[(n+1)%e.length];console.log((n-1+e.length)%e.length,(n+1)%e.length),r.showOnCanvas(),(new PointText(r)).content=n;var o=Math.abs(Util.findAngle(r.x,r.y,s.x,s.y)-Util.findAngle(r.x,r.y,i.x,i.y));t.push([r.getDistance(s,!0),r.getDistance(i,!0),Util.radianToDegree(o)])}return t}var i=r(e),s=r(t),o=0;for(var u=0;u<i.length;u++)o<i[u][0]&&(o=i[u][0]);var a=0;for(var u=0;u<s.length;u++)a<s[u][0]&&(a=s[u][0]);var f=o/a,l=i.length;console.log("Comparison started");for(var c=0;c<l;c++){var h=!0;for(var u=0;u<l;u++){var p=(u+c+l)%l;console.log(u,p);if(i[u][2]==s[p][2]){console.log("same angle ");var d=i[u][0]/s[p][0];if(f+n>d&&f-n<d){console.log("similar edges");continue}h=!1}else h=!1}if(h==1)return!0}console.log("reverse comparison is started");for(var c=0;c<l;c++){var h=!0;for(var u=l-1,p=c;u>=0;u--,p=(p+1)%l){console.log(u,p);if(i[u][2]==s[p][2]){console.log("same angle ");var d=i[u][1]/s[p][0];if(f+n>d&&f-n<d){console.log("similar edges");continue}h=!1}else h=!1}if(h==1)return!0}return!1},InteractiveGrids.GetId=function(){return InteractiveGrids.order?InteractiveGrids.order++:(InteractiveGrids.order=1,InteractiveGrids.GetId())};