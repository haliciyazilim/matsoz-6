function ciz(){function u(n,r,i,s){n.delay=2e3,n.surfaces.topSurface.pivotsX[0]=new Point3(0,0,0),n.surfaces.topSurface.rotationsX[0]=Math.PI/2,n.surfaces.bottomSurface.pivotsX[0]=new Point3(0,0,0),n.surfaces.bottomSurface.rotationsX[0]=Math.PI/2,n.surfaces.leftSurface.pivotsX[0]=new Point3(0,0,0),n.surfaces.leftSurface.rotationsX[0]=Math.PI/2,n.surfaces.rightSurface.pivotsX[0]=new Point3(0,0,0),n.surfaces.rightSurface.rotationsX[0]=Math.PI/2,n.surfaces.frontSurface.pivotsX[0]=new Point3(0,0,0),n.surfaces.frontSurface.rotationsX[0]=Math.PI/2,n.surfaces.backSurface.pivotsX[0]=new Point3(0,0,0),n.surfaces.backSurface.rotationsX[0]=Math.PI/2,n.rotateSurfaceX(n.surfaces.topSurface,-Math.PI/2,new Point3(0,0,0),!0),n.rotateSurfaceX(n.surfaces.bottomSurface,-Math.PI/2,new Point3(0,0,0),!0),n.rotateSurfaceX(n.surfaces.leftSurface,-Math.PI/2,new Point3(0,0,0),!0),n.rotateSurfaceX(n.surfaces.rightSurface,-Math.PI/2,new Point3(0,0,0),!0),n.rotateSurfaceX(n.surfaces.frontSurface,-Math.PI/2,new Point3(0,0,0),!0),n.rotateSurfaceX(n.surfaces.backSurface,-Math.PI/2,new Point3(0,0,0),!0);var o=new AnimationHelper({height:0});u&&u.remove();var u=n.project();return o.animate({style:{height:i},duration:1e3,delay:3e3,animationType:"easeInEaseOut",update:function(){s?n.init(e,this.height,t,s,r):n.init(e,this.height,t,r),u=n.project()},callback:function(){koordinatBack=n.surfaces.backSurface.get2DPoints(r),koordinatFront=n.surfaces.frontSurface.get2DPoints(r),koordinatLeft=n.surfaces.leftSurface.get2DPoints(r),koordinatRight=n.surfaces.rightSurface.get2DPoints(r),koordinat=[koordinatBack,koordinatFront],renk=["black","yellow","red","green"];for(var e=0;e<koordinat.length;e++)for(var t=0;t<4;t++){var i=new Path.Circle(new Point(koordinat[e][t].x,koordinat[e][t].y),10);i.class="nokta",i.myId="nokta"+e+t,i.fillColor=renk[t]}}}),u}var e=100,t=100,n=100,r=180,i=70,s=50,o=.5;matrix=Util.createProjectionMatrixForObjectAt(100,120),matrix2=Util.createProjectionMatrixForObjectAt(300,120),matrix3=Util.createProjectionMatrixForObjectAt(450,120),koordinat=new Array,koordinatBack=new Array,koordinatFront=new Array,koordinatLeft=new Array,koordinatRight=new Array,shapeDikKarePrizma=new ExpandablePrism(e,0,t,matrix),shapeEgikKare=new ExpandableSkewedPrism(e,0,t,0,matrix2),shapeDikdortgenPrizma=new ExpandableRectangularPrism(e,0,t,matrix3),shapeParalelKenar=new ExpandableParallelogramPrism(e,0,t,matrix),shapeEsKenar=new ExpandableEquilateralPrism(e,0,t,matrix2),shapeUcgen=new ExpandableTrianglePrism(e,0,t,matrix3),u(shapeEsKenar,matrix2,n)};